<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on うたもく</title><link>https://www.utam0k.jp/post/</link><description>Recent content in Posts on うたもく</description><generator>Hugo -- gohugo.io</generator><managingEditor>k0ma@utam0k.jp (Toru Komatsu)</managingEditor><webMaster>k0ma@utam0k.jp (Toru Komatsu)</webMaster><lastBuildDate>Sun, 10 May 2020 22:30:00 +0900</lastBuildDate><atom:link href="https://www.utam0k.jp/post/index.xml" rel="self" type="application/rss+xml"/><item><title>GWにフロントエンド力を鍛えつつ飲食店の手助けをちょっとできた話</title><link>https://www.utam0k.jp/blog/2020/05/10/vineria-sorcuore/</link><pubDate>Sun, 10 May 2020 22:30:00 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2020/05/10/vineria-sorcuore/</guid><description>はじめに GW を機に初めて、ちょっと本格的なフロントエンドに触れてみました。 僕は本格的なフロントエンドに触れてこないまま生きてきたので、そろそろ</description></item><item><title>詳解xv6 Scheduling 1</title><link>https://www.utam0k.jp/blog/2019/12/20/xv6_scheduling_1/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2019/12/20/xv6_scheduling_1/</guid><description>詳解xv6の目次 前の記事 アドベントカレンダーの読者向け説明用 自作OSアドベントカレンダー 2019 の20日目の記事です。 この記事はxv6の説明をシリ</description></item><item><title>詳解xv6 Traps, interrupts, and drivers 1</title><link>https://www.utam0k.jp/blog/2019/07/08/xv6_traps_interrupts_drivers_1/</link><pubDate>Mon, 08 Jul 2019 00:00:00 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2019/07/08/xv6_traps_interrupts_drivers_1/</guid><description>詳解xv6の目次 前の記事 次の記事 本章では特別な役割をもったいろいろなレジスタが出現します。 ここでは詳しい説明を避けますサボります。 その代わり</description></item><item><title>詳解xv6 Page tables 2</title><link>https://www.utam0k.jp/blog/2019/04/25/xv6_pagetable_2/</link><pubDate>Thu, 25 Apr 2019 09:00:00 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2019/04/25/xv6_pagetable_2/</guid><description>詳解xv6の目次 前の記事 次の記事 Code: Physical memory allocator 大雑把にやろうとしていること 連結リストfreelistに物理メモリをページ単位で登録する。(kini</description></item><item><title>詳解xv6 Page tables 1</title><link>https://www.utam0k.jp/blog/2019/03/05/xv6_pagetable_1/</link><pubDate>Tue, 05 Mar 2019 18:35:02 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2019/03/05/xv6_pagetable_1/</guid><description>詳解xv6の目次 次の記事 単語説明 PA(Physical Address): 物理アドレス VA(Virtual Address): 仮想アドレス ページング関係 ページングについて参考にしたサイト PTE: ページテーブルエントリ xv</description></item><item><title>詳解xv6 はじめに</title><link>https://www.utam0k.jp/blog/2019/03/05/xv6_intro/</link><pubDate>Tue, 05 Mar 2019 18:35:01 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2019/03/05/xv6_intro/</guid><description>詳解xv6の目次 はじめに xv6はMITが開発している現代版Unix V6です。 x86アーキテクチャで動作するようになっています。 お手元のPCで</description></item><item><title>教育版UNIX v6解説 ~詳解xv6~</title><link>https://www.utam0k.jp/blog/2019/03/05/xv6_index/</link><pubDate>Tue, 05 Mar 2019 18:35:00 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2019/03/05/xv6_index/</guid><description>はじめに 本記事はMITのOSの授業で使われているxv6の解説をコードレベルでする記事です。 xv6はUNIX v6をベースとし、x86で動くよう</description></item><item><title>FreeBSDのオンラインカーネルデバッグ with QEMU</title><link>https://www.utam0k.jp/blog/2018/12/12/freebsd_on-line_debugging/</link><pubDate>Wed, 12 Dec 2018 00:00:00 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2018/12/12/freebsd_on-line_debugging/</guid><description>この記事は自作OS Advent Calendar 2018の12日目の記事です。 はじめに 最近xv6の教科書を読んでみている。 xv6の教科書ではQEMUの-sオプションを</description></item><item><title>1人でがんばる自作Cコンパイラ</title><link>https://www.utam0k.jp/blog/2018/10/12/r9cc/</link><pubDate>Fri, 12 Oct 2018 12:15:41 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2018/10/12/r9cc/</guid><description>はじめに セキュリティキャンを皮切りに自作Cコンパイラがとてもはやっていました。 たのしそー僕もやりたい！！！！でもどうやるんだ？？？ しかし僕の</description></item><item><title>Rustのstd::default::Default</title><link>https://www.utam0k.jp/blog/2018/05/28/rust_std_default/</link><pubDate>Mon, 28 May 2018 21:56:49 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2018/05/28/rust_std_default/</guid><description>RustのstdにDefaultというのがある。 構造体のデフォルト値を決めることができる。 実用例からlibcoreでのどのような実装になって</description></item><item><title>RustでのCircleCiの導入</title><link>https://www.utam0k.jp/blog/2018/05/24/rust_ci/</link><pubDate>Thu, 24 May 2018 16:34:42 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2018/05/24/rust_ci/</guid><description>最近初めてのRust開発で自作シェルのmicanを作っている。 そこでCircleCiをがんばった。 lint Rustのlintとしてrust-cli</description></item><item><title>ブログを始める</title><link>https://www.utam0k.jp/blog/2018/05/23/start/</link><pubDate>Wed, 23 May 2018 13:58:35 +0900</pubDate><author>k0ma@utam0k.jp (Toru Komatsu)</author><guid>https://www.utam0k.jp/blog/2018/05/23/start/</guid><description>ブログを始めた。</description></item></channel></rss>